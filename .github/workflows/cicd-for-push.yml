name: cicd-for-push

on:
  push:
    branches:
      - 'features/**'
      - 'fixes/**'
      - 'develop' # when pr merged

env:
  REGISTRY: v2-zcr.cloudzcp.io
  REPOSIOTRY: v2-zcr.cloudzcp.io/cloudzcp/kks-mlflow-app
  NAMESPACE: ai-ops
  DEPLOYMENT: kks-mlflow-app
  CONTAINER: kks-mlflow-app

jobs:
  build_push_deploy:
    runs-on: ubuntu-latest
    steps:
      - name: Check out the repo
        uses: actions/checkout@v4

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Log in to Private Docker Registry
        uses: docker/login-action@v3
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ secrets.PRIVATE_REGISTRY_USERNAME }}
          password: ${{ secrets.PRIVATE_REGISTRY_PASSWORD }}

      - name: Extract metadata (tags, labels) for Docker
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: |
            ${{ env.REPOSIOTRY }}
          tags: |
            type=ref,event=branch,suffix=-{{date 'YYYYMMDD-HHmmss' tz='Asia/Seoul'}}

      - name: Build and push Docker images to Private Registry
        id: push
        uses: docker/build-push-action@v6
        with:
          context: .
          # platforms: linux/amd64,linux/arm64
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}

      - name: Install kubectl
        uses: azure/setup-kubectl@v4
        # with:
        #   version: '1.28.3' # default is latest stable

      - name: Set image to patch for deployment
        run: |
          # Configure kubectl with Kubeconfig
          mkdir -p $HOME/.kube

          echo "${{ secrets.AGS_KUBE_CONFIG }}" > $HOME/.kube/config
          kubectl config set-context --current --namespace=${{ env.NAMESPACE }}

          # set image
          kubectl set image deployment/${{ env.DEPLOYMENT }} ${{ env.CONTAINER }}=${{ env.DOCKER_METADATA_OUTPUT_TAGS }}

  # for debugging
  # ----------------------------------------------------------------------------
  # dump_contexts_to_log:
  #   runs-on: ubuntu-latest
  #   steps:
  #     - name: Dump GitHub context
  #       env:
  #         GITHUB_CONTEXT: ${{ toJson(github) }}
  #       run: echo "$GITHUB_CONTEXT"
  #     - name: Dump job context
  #       env:
  #         JOB_CONTEXT: ${{ toJson(job) }}
  #       run: echo "$JOB_CONTEXT"
  #     - name: Dump steps context
  #       env:
  #         STEPS_CONTEXT: ${{ toJson(steps) }}
  #       run: echo "$STEPS_CONTEXT"
  #     - name: Dump runner context
  #       env:
  #         RUNNER_CONTEXT: ${{ toJson(runner) }}
  #       run: echo "$RUNNER_CONTEXT"
  #     - name: Dump strategy context
  #       env:
  #         STRATEGY_CONTEXT: ${{ toJson(strategy) }}
  #       run: echo "$STRATEGY_CONTEXT"
  #     - name: Dump matrix context
  #       env:
  #         MATRIX_CONTEXT: ${{ toJson(matrix) }}
  #       run: echo "$MATRIX_CONTEXT"
